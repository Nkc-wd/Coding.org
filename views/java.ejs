<%- include("../partials/header") %>
<%- include("../partials/nav") %>

<div style="color:#9a7407;">
<h1 style="margin:80px 0 0 420px">JAVA</h1>
  <h2 style="margin-left:300px;" >(programming language)</h2></div>
  <div class="javafront content">
  </div>
<div class="roboto content" >
<p class=" m-2 ml-3"><p> Java is a general-purpose programming language that is class-based, object-oriented, and designed to have as few implementation dependencies as possible. It is intended to let application developers write once, run anywhere (WORA),[15] meaning that compiled Java code can run on all platforms that support Java without the need for recompilation.[16] Java applications are typically compiled to bytecode that can run on any Java virtual machine (JVM) regardless of the underlying computer architecture. The syntax of Java is similar to C and C++, but it has fewer low-level facilities than either of them. As of 2019, Java was one of the most popular programming languages in use according to GitHub particularly for client-server web applications, with a reported 9 million developers.</p>

<p>Java was originally developed by James Gosling at Sun Microsystems (which has since been acquired by Oracle) and released in 1995 as a core component of Sun Microsystems' Java platform. The original and reference implementation Java compilers, virtual machines, and class libraries were originally released by Sun under proprietary licenses. As of May 2007, in compliance with the specifications of the Java Community Process, Sun had relicensed most of its Java technologies under the GNU General Public License. Meanwhile, others have developed alternative implementations of these Sun technologies, such as the GNU Compiler for Java (bytecode compiler), GNU Classpath (standard libraries), and IcedTea-Web (browser plugin for applets).</p>

<p>The latest versions are Java 13, released in September 2019, and Java 11, a currently supported long-term support (LTS) version, released on September 25, 2018; Oracle released for the legacy Java 8 LTS the last free public update in January 2019 for commercial use, while it will otherwise still support Java 8 with public updates for personal use up to at least December 2020. Oracle (and others) highly recommend uninstalling older versions of Java because of serious risks due to unresolved security issues.[20] Since Java 9 (and 10 and 12) is no longer supported, Oracle advises its users to immediately transition to the latest version (currently Java 13) or an LTS release.</p> 
</p>

</div>
<br><br><br><br><br>
<div class="roboto" style="margin:30px 50px 10px 40px;">
<p><span class="h4">History of JAVA</span> <hr><br>
<p>James Gosling, Mike Sheridan, and Patrick Naughton initiated the Java language project in June 1991.[21] Java was originally designed for interactive television, but it was too advanced for the digital cable television industry at the time.[22] The language was initially called Oak after an oak tree that stood outside Gosling's office. Later the project went by the name Green and was finally renamed Java, from Java coffee, the coffee from Indonesia.[23] Gosling designed Java with a C/C++-style syntax that system and application programmers would find familiar.</p> 

<p>Sun Microsystems released the first public implementation as Java 1.0 in 1996.[25] It promised Write Once, Run Anywhere (WORA), providing no-cost run-times on popular platforms. Fairly secure and featuring configurable security, it allowed network- and file-access restrictions. Major web browsers soon incorporated the ability to run Java applets within web pages, and Java quickly became popular. The Java 1.0 compiler was re-written in Java by Arthur van Hoff to comply strictly with the Java 1.0 language specification.[26] With the advent of Java 2 (released initially as J2SE 1.2 in December 1998 – 1999), new versions had multiple configurations built for different types of platforms. J2EE included technologies and APIs for enterprise applications typically run in server environments, while J2ME featured APIs optimized for mobile applications. The desktop version was renamed J2SE. In 2006, for marketing purposes, Sun renamed new J2 versions as Java EE, Java ME, and Java SE, respectively.</p>

<p>In 1997, Sun Microsystems approached the ISO/IEC JTC 1 standards body and later the Ecma International to formalize Java, but it soon withdrew from the process.[27][28][29] Java remains a de facto standard, controlled through the Java Community Process.[30] At one time, Sun made most of its Java implementations available without charge, despite their proprietary software status. Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System.

On November 13, 2006, Sun released much of its Java virtual machine (JVM) as free and open-source software (FOSS), under the terms of the GNU General Public License (GPL). On May 8, 2007, Sun finished the process, making all of its JVM's core code available under free software/open-source distribution terms, aside from a small portion of code to which Sun did not hold the copyright.</p>
<p>Sun's vice-president Rich Green said that Sun's ideal role with regard to Java was as an evangelist.[32] Following Oracle Corporation's acquisition of Sun Microsystems in 2009–10, Oracle has described itself as the steward of Java technology with a relentless commitment to fostering a community of participation and transparency.[33] This did not prevent Oracle from filing a lawsuit against Google shortly after that for using Java inside the Android SDK (see the Android section). Java software runs on everything from laptops to data centers, game consoles to scientific supercomputers.[34] On April 2, 2010, James Gosling resigned from Oracle.</p>

<span class="jah5">Principles</span> <hr><br>
 <span class="h6">There were five primary goals in the creation of the Java language:</span><br>
<ul>
 <li>It must be simple, object-oriented, and familiar.</li>
 <li>It must be robust and secure.</li>
 <li>It must be architecture-neutral and portable.</li>
 <li>It must execute with high performance.</li>
 <li>It must be interpreted, threaded, and dynamic.</li>
</ul>

<span class="jah5">Versions</span> <hr><br>
 <span class="h6">As of March 2019, Java 8 is supported; and both Java 8 and 11 as Long Term Support (LTS) versions. Major release versions of Java, along with their release dates:</span><br>


<ul>
  <li>JDK 1.0 (January 23, 1996)</li>
  <li>JDK 1.1 (February 19, 1996)</li>
  <li>J2SE 1.2 (December 8, 1998)</li>
  <li>J2SE 1.3 (May 8, 2000)</li>
  <li>J2SE 1.4 (February 6, 2002)</li>
  <li>J2SE 5.0 (September 30, 2004)</li>
  <li>Java SE 6 (December 11, 2006)</li>
  <li>Java SE 7 (July 28, 2011)</li>
  <li>Java SE 8 (March 18, 2014)</li>
  <li>Java SE 9 (September 21, 2017)</li>
  <li>Java SE 10 (March 20, 2018)</li>
  <li>Java SE 11 (September 25, 2018)</li>
  <li>Java SE 12 (March 19, 2019)</li>
  <li>Java SE 13 (September 17, 2019)</li>
</ul>
<br>
<span class="jah5">Applet</span> <hr><br>

Java applets were programs that were embedded in other applications, typically in a Web page displayed in a web browser. The Java applet API is now deprecated since Java 8 in 2017.<br><br>

<span class="jah5">Servlet</span> <hr><br>

Java servlet technology provides Web developers with a simple, consistent mechanism for extending the functionality of a Web server and for accessing existing business systems. Servlets are server-side Java EE components that generate responses (typically HTML pages) to requests (typically HTTP requests) from clients.<br>

The Java servlet API has to some extent been superseded by two standard Java technologies for web services:<br>

the Java API for RESTful Web Services (JAX-RS 2.0) useful for AJAX, JSON and REST services, and
the Java API for XML Web Services (JAX-WS) useful for SOAP Web Services.<br><br>

<span class="jah5">JavaServer Pages</span> <hr><br>


JavaServer Pages (JSP) are server-side Java EE components that generate responses, typically HTML pages, to HTTP requests from clients. JSPs embed Java code in an HTML page by using the special delimiters. A JSP is compiled to a Java servlet, a Java application in its own right, the first time it is accessed. After that, the generated servlet creates the response.<br><br>
<span class="jah5">Swing application</span> <hr><br>

Swing is a graphical user interface library for the Java SE platform. It is possible to specify a different look and feel through the pluggable look and feel system of Swing. Clones of Windows, GTK+, and Motif are supplied by Sun. Apple also provides an Aqua look and feel for macOS. Where prior implementations of these looks and feels may have been considered lacking, Swing in Java SE 6 addresses this problem by using more native GUI widget drawing routines of the underlying platforms.<br><br>

<span class="jah5">JavaFX application</span> <hr><br>

JavaFX is a software platform for creating and delivering desktop applications, as well as rich Internet applications (RIAs) that can run across a wide variety of devices. JavaFX is intended to replace Swing as the standard GUI library for Java SE, but both will be included for the foreseeable future. JavaFX has support for desktop computers and web browsers on Microsoft Windows, Linux, and macOS. JavaFX does not have support for native OS look and feels.<br><br>

<span class="jah5">Generics</span> <hr><br>

In 2004, generics were added to the Java language, as part of J2SE 5.0. Prior to the introduction of generics, each variable declaration had to be of a specific type. For container classes, for example, this is a problem because there is no easy way to create a container that accepts only specific types of objects. Either the container operates on all subtypes of a class or interface, usually Object, or a different container class has to be created for each contained class. Generics allow compile-time type checking without having to create many container classes, each containing almost identical code. In addition to enabling more efficient code, certain runtime exceptions are prevented from occurring, by issuing compile-time errors. If Java prevented all runtime type errors (ClassCastException's) from occurring, it would be type safe.<br>

In 2016, the type system of Java was proven unsound.<br>
</p>
<img src="https://cdn.journaldev.com/wp-content/uploads/2017/12/java-basic-programs-output.png" width="700px;" height="500px;" style="margin-left:200px;">

<div class="display-3" style="font-size:30px;">
  <a href="https://www.javatpoint.com/java-tutorial">Continue...</a>
</div>

</div>



<%- include("../partials/news") %>   
<%- include("../partials/footer") %>