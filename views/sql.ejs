<%- include("../partials/header") %>
<%- include("../partials/nav") %>

<div style="color:#4e4444;">
<h1 style="margin:80px 0 0 450px">SQL</h1>
  <h2 style="margin-left:300px;">(Structured Query Language)</h2></div>
  <div class="sqfront content">
  </div>
<div class="roboto content" >
<p class=" m-2 ml-3"><p> SQL (/ˌɛsˌkjuːˈɛl/ (About this soundlisten) S-Q-L,[4] /ˈsiːkwəl/ "sequel"; Structured Query Language)is a domain-specific language used in programming and designed for managing data held in a relational database management system (RDBMS), or for stream processing in a relational data stream management system (RDSMS). It is particularly useful in handling structured data, i.e. data incorporating relations among entities and variables.</p>

<p>SQL offers two main advantages over older read–write APIs such as ISAM or VSAM. Firstly, it introduced the concept of accessing many records with one single command. Secondly, it eliminates the need to specify how to reach a record, e.g. with or without an index</p>

<p>Originally based upon relational algebra and tuple relational calculus, SQL consists of many types of statements,[8] which may be informally classed as sublanguages, commonly: a data query language (DQL),[a] a data definition language (DDL),[b] a data control language (DCL), and a data manipulation language (DML).[c][9] The scope of SQL includes data query, data manipulation (insert, update and delete), data definition (schema creation and modification), and data access control. Although SQL is essentially a declarative language (4GL), it includes also procedural elements.</p> 

<p> SQL was one of the first commercial languages to utilize Edgar F. Codd’s relational model. The model was described in his influential 1970 paper, "A Relational Model of Data for Large Shared Data Banks".[10] Despite not entirely adhering to the relational model as described by Codd, it became the most widely used database language.</p></p>

</div>
<div  class="roboto" style="margin:30px 50px 10px 40px;">
<p><span class="h4">History of SQL</span> <hr><br>
<p>SQL was initially developed at IBM by Donald D. Chamberlin and Raymond F. Boyce after learning about the relational model from Ted Codd[14] in the early 1970s.[15] This version, initially called SEQUEL (Structured English Query Language), was designed to manipulate and retrieve data stored in IBM's original quasi-relational database management system, System R, which a group at IBM San Jose Research Laboratory had developed during the 1970s</p> 
<p> Chamberlin and Boyce's first attempt of a relational database language was Square, but it was difficult to use due to subscript notation. After moving to the San Jose Research Laboratory in 1973, they began work on SEQUEL.[14] The acronym SEQUEL was later changed to SQL because "SEQUEL" was a trademark of the UK-based Hawker Siddeley Dynamics Engineering Limited company.</p>

<p> After testing SQL at customer test sites to determine the usefulness and practicality of the system, IBM began developing commercial products based on their System R prototype including System/38, SQL/DS, and DB2, which were commercially available in 1979, 1981, and 1983, respectively.</p>

<p> In the late 1970s, Relational Software, Inc. (now Oracle Corporation) saw the potential of the concepts described by Codd, Chamberlin, and Boyce, and developed their own SQL-based RDMS with aspirations of selling it to the U.S. Navy, Central Intelligence Agency, and other U.S. government agencies. In June 1979, Relational Software, Inc. introduced the first commercially available implementation of SQL, Oracle V2 (Version2) for VAX computers.</p>

<p>By 1986, ANSI and ISO standard groups officially adopted the standard "Database Language SQL" language definition. New versions of the standard were published in 1989, 1992, 1996, 1999, 2003, 2006, 2008, 2011[14] and, most recently, 2016</p> 

<span class="sh5"> Syntax</span> <hr><br>

The SQL language is subdivided into several language elements, including:<br>
<ul>
<li>
Clauses, which are constituent components of statements and queries. (In some cases, these are optional.</li>
<li>Expressions, which can produce either scalar values, or tables consisting of columns and rows of data
Predicates, which specify conditions that can be evaluated to SQL three-valued logic (3VL) (true/false/unknown) or Boolean truth values and are used to limit the effects of statements and queries, or to change program flow.</li>
<li>Queries, which retrieve the data based on specific criteria. This is an important element of SQL.</li>
<li>Statements, which may have a persistent effect on schemata and data, or may control transactions, program flow, connections, sessions, or diagnostics.
</li>
<li>SQL statements also include the semicolon (";") statement terminator. Though not required on every platform, it is defined as a standard part of the SQL grammar.</li>
<li>Insignificant whitespace is generally ignored in SQL statements and queries, making it easier to format SQL code for readability.</li>
</ul>

<span class="sh5">Interoperability and standardization</span> <hr><br>
<p>SQL implementations are incompatible between vendors and do not necessarily completely follow standards. In particular date and time syntax, string concatenation, NULLs, and comparison case sensitivity vary from vendor to vendor. Particular exceptions are PostgreSQL[23] and Mimer SQL[24] which strive for standards compliance, though PostgreSQL does not adhere to the standard in how folding of unquoted names is done. The folding of unquoted names to lower case in PostgreSQL is incompatible with the SQL standard,[25] which says that unquoted names should be folded to upper case.[26] Thus, Foo should be equivalent to FOO not foo according to the standard.</p>
<p>Popular implementations of SQL commonly omit support for basic features of Standard SQL, such as the DATE or TIME data types. The most obvious such examples, and incidentally the most popular commercial and proprietary SQL DBMSs, are Oracle (whose DATE behaves as DATETIME,[27][28] and lacks a TIME type)[29] and MS SQL Server (before the 2008 version). As a result, SQL code can rarely be ported between database systems without modifications.</p>
There are several reasons for this lack of portability between database systems.<br>
<ol>
<li>The complexity and size of the SQL standard means that most implementors do not support the entire standard.</li>
<li>The standard does not specify database behavior in several important areas (e.g. indexes, file storage...), leaving implementations to decide how to behave.
</li>
<li>The SQL standard precisely specifies the syntax that a conforming database system must implement. However, the standard's specification of the semantics of language constructs is less well-defined, leading to ambiguity.
</li>
<li>Many database vendors have large existing customer bases; where the newer version of the SQL standard conflicts with the prior behavior of the vendor's database, the vendor may be unwilling to break backward compatibility.
</li>
<li>There is little commercial incentive for vendors to make it easier for users to change database suppliers (see vendor lock-in).
</li>
<li>Users evaluating database software tend to place other factors such as performance higher in their priorities than standards conformance.
</li>
</ol>
<p>SQL was adopted as a standard by the American National Standards Institute (ANSI) in 1986 as SQL-86[30] and the International Organization for Standardization (ISO) in 1987.[13] It is maintained by ISO/IEC JTC 1, Information technology, Subcommittee SC 32, Data management and interchange. The standard is commonly denoted by the pattern: ISO/IEC 9075-n:yyyy Part n: title, or, as a shortcut, ISO/IEC 9075.</p>
<p>ISO/IEC 9075 is complemented by ISO/IEC 13249: SQL Multimedia and Application Packages (SQL/MM), which defines SQL based interfaces and packages to widely spread applications like video, audio and spatial data.</p> 

<p>Until 1996, the National Institute of Standards and Technology (NIST) data management standards program certified SQL DBMS compliance with the SQL standard. Vendors now self-certify the compliance of their products.</p>
</p>
<img src="https://cdn.rd.gt/assets/products/sql-search/images/screenshots/increase-efficiency.png" width="700px;" height="400px;" style="margin-left:200px;">

<div class="display-4" style="font-size:30px;">
  <a href="https://www.tutorialspoint.com/sql/index.htm">Continue...</a>
</div>

</div>



<%- include("../partials/news") %>   
<%- include("../partials/footer") %>